import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ê–Ω–∞–ª–∏–∑ –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω—ã",
    page_icon="üêé",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üêé –ê–Ω–∞–ª–∏–∑ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω—ã")
st.markdown("–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –∫–∞–∑–∞—Ö—Å–∫–æ–π –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω—ã")

# –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω—ã
@st.cache_data
def load_horsemeat_jerky_data():
    # –ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω—ã (–Ω–∞ 100 –≥)
    nutrition_data = {
        '–≠—Ç–∞–ø': ['–°–≤–µ–∂–∞—è –∫–æ–Ω–∏–Ω–∞', '–ü–æ–ª—É–≤—è–ª–µ–Ω–∞—è –∫–æ–Ω–∏–Ω–∞', '–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—è–ª–µ–Ω–∞—è –∫–æ–Ω–∏–Ω–∞'],
        '–í–ª–∞–≥–∞_%': [73.0, 45.0, 18.0],
        '–ë–µ–ª–∫–∏_–≥': [21.4, 35.2, 48.5],
        '–ñ–∏—Ä—ã_–≥': [2.7, 4.5, 6.2],
        '–ö–∞–ª–æ—Ä–∏–∏_–∫–∫–∞–ª': [113, 186, 256],
        '–ù–∞—Ç—Ä–∏–π_–º–≥': [53, 850, 1200],
        '–ñ–µ–ª–µ–∑–æ_–º–≥': [3.2, 5.3, 7.4],
        '–¶–∏–Ω–∫_–º–≥': [4.8, 7.9, 11.2]
    }
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_params = {
        '–í—Ä–µ–º—è_–∑–∞—Å–æ–ª–∫–∏_–¥–Ω–∏': [3, 5, 7],
        '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞_—Å—É—à–∫–∏_‚ÑÉ': [12, 15, 18],
        '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è_–≤–ª–∞–∂–Ω–æ—Å—Ç—å_%': [70, 65, 60],
        '–í—Ä–µ–º—è_—Å—É—à–∫–∏_–¥–Ω–∏': [15, 21, 30]
    }
    
    # –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞
    quality_data = {
        '–ü–∞—Ä—Ç–∏—è': [f'KM{i:02d}' for i in range(1, 21)],
        '–í–ª–∞–≥–∞_%': np.random.normal(25, 5, 20),
        '–°–æ–ª—å_%': np.random.normal(6, 1, 20),
        '–ë–µ–ª–∫–∏_%': np.random.normal(45, 3, 20),
        'pH': np.random.normal(5.6, 0.3, 20),
        'aw': np.random.normal(0.82, 0.05, 20)
    }
    
    return pd.DataFrame(nutrition_data), pd.DataFrame(processing_params), pd.DataFrame(quality_data)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
nutrition_df, processing_df, quality_df = load_horsemeat_jerky_data()

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([1, 2])

with col1:
    st.header("üìä –†–∞—Å—á–µ—Ç –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    
    # –í—ã–±–æ—Ä —ç—Ç–∞–ø–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
    product_stage = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø –ø—Ä–æ–¥—É–∫—Ç–∞",
        options=nutrition_df['–≠—Ç–∞–ø'].values
    )
    
    # –í–≤–æ–¥ –≤–µ—Å–∞
    weight = st.number_input(
        "–í–µ—Å (–≥—Ä–∞–º–º)",
        min_value=1,
        max_value=500,
        value=50,
        step=10,
        help="–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –ø–æ—Ä—Ü–∏—è: 20-50 –≥"
    )
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    st.subheader("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    stage_index = nutrition_df[nutrition_df['–≠—Ç–∞–ø'] == product_stage].index[0]
    
    st.write(f"**–í—Ä–µ–º—è –∑–∞—Å–æ–ª–∫–∏:** {processing_df['–í—Ä–µ–º—è_–∑–∞—Å–æ–ª–∫–∏_–¥–Ω–∏'].iloc[stage_index]} –¥–Ω–µ–π")
    st.write(f"**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—É—à–∫–∏:** {processing_df['–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞_—Å—É—à–∫–∏_‚ÑÉ'].iloc[stage_index]}‚ÑÉ")
    st.write(f"**–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å:** {processing_df['–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è_–≤–ª–∞–∂–Ω–æ—Å—Ç—å_%'].iloc[stage_index]}%")
    st.write(f"**–í—Ä–µ–º—è —Å—É—à–∫–∏:** {processing_df['–í—Ä–µ–º—è_—Å—É—à–∫–∏_–¥–Ω–∏'].iloc[stage_index]} –¥–Ω–µ–π")

with col2:
    st.header("üìà –ê–Ω–∞–ª–∏–∑ –ø–∏—â–µ–≤–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç—Ç–∞–ø–∞
    stage_data = nutrition_df[nutrition_df['–≠—Ç–∞–ø'] == product_stage].iloc[0]
    
    # –†–∞—Å—á–µ—Ç –ø–∏—â–µ–≤–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏
    weight_factor = weight / 100
    nutrition_results = {
        '–ë–µ–ª–∫–∏': stage_data['–ë–µ–ª–∫–∏_–≥'] * weight_factor,
        '–ñ–∏—Ä—ã': stage_data['–ñ–∏—Ä—ã_–≥'] * weight_factor,
        '–ö–∞–ª–æ—Ä–∏–∏': stage_data['–ö–∞–ª–æ—Ä–∏–∏_–∫–∫–∞–ª'] * weight_factor,
        '–ù–∞—Ç—Ä–∏–π': stage_data['–ù–∞—Ç—Ä–∏–π_–º–≥'] * weight_factor,
        '–ñ–µ–ª–µ–∑–æ': stage_data['–ñ–µ–ª–µ–∑–æ_–º–≥'] * weight_factor,
        '–¶–∏–Ω–∫': stage_data['–¶–∏–Ω–∫_–º–≥'] * weight_factor
    }
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    st.subheader(f"–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å {weight}–≥ {product_stage}")
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞–∫–µ—Ç–∞ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
    col2_1, col2_2, col2_3 = st.columns(3)
    
    with col2_1:
        st.metric("üî• –ö–∞–ª–æ—Ä–∏–∏", f"{nutrition_results['–ö–∞–ª–æ—Ä–∏–∏']:.0f} –∫–∫–∞–ª")
        st.metric("üí™ –ë–µ–ª–∫–∏", f"{nutrition_results['–ë–µ–ª–∫–∏']:.1f} –≥")
        
    with col2_2:
        st.metric("üõ¢Ô∏è –ñ–∏—Ä—ã", f"{nutrition_results['–ñ–∏—Ä—ã']:.1f} –≥")
        st.metric("üßÇ –ù–∞—Ç—Ä–∏–π", f"{nutrition_results['–ù–∞—Ç—Ä–∏–π']:.0f} –º–≥")
        
    with col2_3:
        st.metric("üî¥ –ñ–µ–ª–µ–∑–æ", f"{nutrition_results['–ñ–µ–ª–µ–∑–æ']:.1f} –º–≥")
        st.metric("üîµ –¶–∏–Ω–∫", f"{nutrition_results['–¶–∏–Ω–∫']:.1f} –º–≥")

# –í–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
st.header("üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—è–ª–µ–Ω–∏—è")

tab1, tab2, tab3 = st.tabs(["–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏", "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞"])

with tab1:
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∏—â–µ–≤–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—è–ª–µ–Ω–∏—è
    fig1 = go.Figure()
    
    fig1.add_trace(go.Scatter(
        x=nutrition_df['–≠—Ç–∞–ø'], 
        y=nutrition_df['–ë–µ–ª–∫–∏_–≥'],
        mode='lines+markers',
        name='–ë–µ–ª–∫–∏',
        line=dict(color='blue', width=3)
    ))
    
    fig1.add_trace(go.Scatter(
        x=nutrition_df['–≠—Ç–∞–ø'], 
        y=nutrition_df['–í–ª–∞–≥–∞_%'],
        mode='lines+markers',
        name='–í–ª–∞–≥–∞',
        line=dict(color='green', width=3)
    ))
    
    fig1.update_layout(
        title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –±–µ–ª–∫–æ–≤ –∏ –≤–ª–∞–≥–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—è–ª–µ–Ω–∏—è",
        xaxis_title="–≠—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏",
        yaxis_title="–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ (–≥/100–≥)",
        height=400
    )
    
    st.plotly_chart(fig1, use_container_width=True)

with tab2:
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    col1, col2 = st.columns(2)
    
    with col1:
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        param_data = pd.DataFrame({
            '–ü–∞—Ä–∞–º–µ—Ç—Ä': ['–í—Ä–µ–º—è –∑–∞—Å–æ–ª–∫–∏', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—É—à–∫–∏', '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å'],
            '–ó–Ω–∞—á–µ–Ω–∏–µ': [
                processing_df['–í—Ä–µ–º—è_–∑–∞—Å–æ–ª–∫–∏_–¥–Ω–∏'].mean(), 
                processing_df['–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞_—Å—É—à–∫–∏_‚ÑÉ'].mean(), 
                processing_df['–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è_–≤–ª–∞–∂–Ω–æ—Å—Ç—å_%'].mean()
            ]
        })
        
        fig2 = px.bar(
            param_data,
            x='–ü–∞—Ä–∞–º–µ—Ç—Ä',
            y='–ó–Ω–∞—á–µ–Ω–∏–µ',
            title="–°—Ä–µ–¥–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            labels={'–ó–Ω–∞—á–µ–Ω–∏–µ': '–ó–Ω–∞—á–µ–Ω–∏–µ'}
        )
        st.plotly_chart(fig2, use_container_width=True)
    
    with col2:
        fig3 = px.line(
            processing_df,
            x=['–≠—Ç–∞–ø 1', '–≠—Ç–∞–ø 2', '–≠—Ç–∞–ø 3'],
            y='–í—Ä–µ–º—è_—Å—É—à–∫–∏_–¥–Ω–∏',
            title="–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—à–∫–∏",
            markers=True
        )
        st.plotly_chart(fig3, use_container_width=True)

with tab3:
    # –ì—Ä–∞—Ñ–∏–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞
    st.subheader("–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–∞—Ä—Ç–∏–π")
    
    fig4 = px.scatter(
        quality_df,
        x='–í–ª–∞–≥–∞_%',
        y='–°–æ–ª—å_%',
        color='–ë–µ–ª–∫–∏_%',
        size='pH',
        hover_data=['–ü–∞—Ä—Ç–∏—è'],
        title="–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–ª–∞–≥–∏ vs –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–ª–∏",
        labels={'–í–ª–∞–≥–∞_%': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–ª–∞–≥–∏ (%)', '–°–æ–ª—å_%': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–ª–∏ (%)'}
    )
    
    st.plotly_chart(fig4, use_container_width=True)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫–∞—á–µ—Å—Ç–≤–∞
    st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫–∞—á–µ—Å—Ç–≤–∞")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        fig5 = px.histogram(quality_df, x='–í–ª–∞–≥–∞_%', title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –≤–ª–∞–≥–∏")
        st.plotly_chart(fig5, use_container_width=True)
    
    with col2:
        fig6 = px.histogram(quality_df, x='–°–æ–ª—å_%', title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–ª–∏")
        st.plotly_chart(fig6, use_container_width=True)
    
    with col3:
        fig7 = px.histogram(quality_df, x='–ë–µ–ª–∫–∏_%', title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –±–µ–ª–∫–æ–≤")
        st.plotly_chart(fig7, use_container_width=True)

# –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
st.header("üí° –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ –∫–∞–∑–∞—Ö—Å–∫–æ–π –≤—è–ª–µ–Ω–æ–π –∫–æ–Ω–∏–Ω–µ")

col1, col2 = st.columns(2)

with col1:
    st.subheader("üêé –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è")
    st.info("""
    **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—ã—Ä—å—é:**
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º—ã—à—Ü –∫—Ä—É–ø–∞ –∏ —Å–ø–∏–Ω—ã –≤–∑—Ä–æ—Å–ª—ã—Ö –ª–æ—à–∞–¥–µ–π
    - –ú—è—Å–æ –ø–ª–æ—Ç–Ω–æ–µ, —Å —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∂–∏—Ä–∞
    - –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –æ—Å–µ–Ω—å—é –ø—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
    
    **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å:**
    1. –°–æ–ª–µ–Ω–∏–µ (3-7 –¥–Ω–µ–π)
    2. –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—É—à–∫–∞ (15-30 –¥–Ω–µ–π)
    3. –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–π —Å—É—à–∫–∏
    4. –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —É–ø–∞–∫–æ–≤–∫–∞
    """)

with col2:
    st.subheader("üè• –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—é")
    st.info("""
    **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é:**
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—É—Ç–æ—á–Ω–∞—è –ø–æ—Ä—Ü–∏—è: 20-50 –≥
    - –í—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤–∞—è –¥–æ–±–∞–≤–∫–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞–º
    - –ë–æ–≥–∞—Ç–∞ –∂–µ–ª–µ–∑–æ–º, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∞–Ω–µ–º–∏–∏
    
    **–£—Å–ª–æ–≤–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è:**
    - –•—Ä–∞–Ω–∏—Ç—å –≤ —Å—É—Ö–æ–º –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–º –º–µ—Å—Ç–µ
    - –ò–∑–±–µ–≥–∞—Ç—å –ø—Ä—è–º–æ–≥–æ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞
    - –°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏: 6-12 –º–µ—Å—è—Ü–µ–≤
    - –ü–æ—Å–ª–µ –≤—Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ
    """)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
st.sidebar.header("üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
if st.sidebar.button("–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"):
    csv = nutrition_df.to_csv(index=False)
    st.sidebar.download_button(
        label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ CSV",
        data=csv,
        file_name=f"–¥–∞–Ω–Ω—ã–µ_–ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏_–≤—è–ª–µ–Ω–æ–π_–∫–æ–Ω–∏–Ω—ã_{datetime.now().strftime('%Y%m%d')}.csv",
        mime="text/csv"
    )

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –≤ –ø–æ–¥–≤–∞–ª–µ
st.markdown("---")
st.markdown("""
**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ –¥–∞–Ω–Ω—ã–º:**
- –ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –∫–∞–∑–∞—Ö—Å–∫–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤—è–ª–µ–Ω–∏—è –∫–æ–Ω–∏–Ω—ã
- –ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∞ –Ω–∞ 100 –≥ —Å—ä–µ–¥–æ–±–Ω–æ–π —á–∞—Å—Ç–∏
- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —è–≤–ª—è—é—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- –î–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–∏–π
""")
